<start_of_turn>user
Analyze the following conversation context and the extracted key concepts. Identify specific relationships *explicitly stated or strongly implied* in the context between pairs of these concepts.

**Target Relationship Types:** {target_relations_str}
(Use 'RELATED_TO' for general associations not covered by other types. Use 'IS_A' for type/instance relationships. Use 'HAS_PROPERTY' for attributes.)

**Concepts (Use ONLY these exact strings for subject/object):**
{concept_list_str}

**Conversation Context:**
--- START ---
{context_text}
--- END ---

**Output Format:** Respond ONLY with a valid JSON list containing objects. Each object represents one identified relationship and MUST have keys "subject", "relation", and "object".
- The "subject" and "object" values MUST be exact strings from the Concepts list above.
- The "relation" value MUST be one of the Target Relationship Types.
- Only include relationships clearly supported by the Conversation Context.
- If no target relationships are found between the provided concepts based on the context, output an empty JSON list `[]`.
- Do NOT invent relationships or use concepts not in the list.

**Example Output (for different concepts/context):**
```json
[
  {{"subject": "increased server load", "relation": "CAUSES", "object": "slow response time"}},
  {{"subject": "wheel", "relation": "PART_OF", "object": "bicycle"}},
  {{"subject": "apple", "relation": "HAS_PROPERTY", "object": "red color"}},
  {{"subject": "project alpha", "relation": "RELATED_TO", "object": "deadline"}},
  {{"subject": "poodle", "relation": "IS_A", "object": "dog"}}
]
```

**JSON Output:**<end_of_turn>
<start_of_turn>model
